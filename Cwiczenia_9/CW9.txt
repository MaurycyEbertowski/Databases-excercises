"Hash Join  (cost=415.95..1581.22 rows=279 width=44) (actual time=1.441..6.776 rows=486 loops=1)"
"  Hash Cond: (soh.customerid = c.customerid)"
"  ->  Seq Scan on salesorderheader soh  (cost=0.00..1082.65 rows=31465 width=32) (actual time=0.012..1.844 rows=31465 loops=1)"
"  ->  Hash  (cost=413.75..413.75 rows=176 width=16) (actual time=1.401..1.402 rows=176 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 16kB"
"        ->  Seq Scan on customer c  (cost=0.00..413.75 rows=176 width=16) (actual time=0.012..1.375 rows=176 loops=1)"
"              Filter: (territoryid = 5)"
"              Rows Removed by Filter: 19644"
"Planning Time: 0.212 ms"
"Execution Time: 6.834 ms"

--po stworzeniu indeksów

"Hash Join  (cost=183.14..1348.41 rows=279 width=44) (actual time=0.160..5.698 rows=486 loops=1)"
"  Hash Cond: (soh.customerid = c.customerid)"
"  ->  Seq Scan on salesorderheader soh  (cost=0.00..1082.65 rows=31465 width=32) (actual time=0.011..1.856 rows=31465 loops=1)"
"  ->  Hash  (cost=180.94..180.94 rows=176 width=16) (actual time=0.139..0.140 rows=176 loops=1)"
"        Buckets: 1024  Batches: 1  Memory Usage: 16kB"
"        ->  Bitmap Heap Scan on customer c  (cost=5.65..180.94 rows=176 width=16) (actual time=0.064..0.116 rows=176 loops=1)"
"              Recheck Cond: (territoryid = 5)"
"              Heap Blocks: exact=24"
"              ->  Bitmap Index Scan on idx_territoryid  (cost=0.00..5.61 rows=176 width=0) (actual time=0.056..0.056 rows=176 loops=1)"
"                    Index Cond: (territoryid = 5)"
"Planning Time: 5.015 ms"
"Execution Time: 5.757 ms"

Przed zdefiniowaniem ineksów wykonany był Seq Scan, czyli przeszukana była cała tabela w poszukiwaniu rekordów spełiających warunek territoryid = 5,
koszt operacji wyniósł 415. Po stworzeniu indeksów wykorzystane zostały Bitmap Heap Scan i Bitmap Index Scan, są one wydajniejszą opcją, ponieważ
Index Scan wskazuje na wiersze spełniające warunek, a Heap Scan odczytuje dane z tych wierszy , koszt operacji spadł do 183.